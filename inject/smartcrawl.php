<?php
/**
 * This file merges in the custom Person schema for the user into the JSON-LD schema output
 * generated by Smartcrawl Pro plugin.
 */
namespace JSON_LD_Author_Plugin;

\add_filter( 'wds_schema_printer_schema_data', 'JSON_LD_Author_Plugin\smartcrawl_author_schema_output', 999, 2 );
function smartcrawl_author_schema_output($schema) {
  // TODO: The contents of this file is basically the same as the contents of inject/aioseo.php
  // Update the Person
  $count = find_all_in_multidimensional_array($schema, function($key, $value) {
    if ( is_array($value) && isset($value['@type']) && $value['@type'] === 'Person' ) {
      return true;
    }
    
    return false;
  }, $results);

  if ( $count > 0 ) {
    $id = get_user_id_from_person_id( $results[0]['@id'] );
    $person_schema = get_person_schema_for_user( $id );
    append_schema($results[0], $person_schema);
  }

  // Update the ProfilePage to make the mainEntity field a person
  $count = find_all_in_multidimensional_array($schema, function($key, $value) {
    if ( is_array($value) && isset($value['@type']) && $value['@type'] === 'ProfilePage' ) {
      return true;
    }
    
    return false;
  }, $results);

  if ( $count > 0 ) {
    $id = get_user_id_from_person_id( $results[0]['@id'] );
    $person_schema = get_person_schema_for_user( $id );

    // If not a Person, replace it with a Person
    if ( (! array_key_exists('mainEntity', $results[0])) || 
      ( is_array($results[0]['mainEntity']) && $results[0]['mainEntity']['@type'] !== 'Person')
    ) {
      $results[0]['mainEntity'] = [
        '@type' => 'Person',
        '@id' => $results[0]['@id'],
      ];
    }

    append_schema($results[0]['mainEntity'], $person_schema);
  }

  return $schema;
}
